version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # log-simulator:
  #   build: ./log-simulator
  #   depends_on:
  #     - kafka
  #   environment:
  #     - KAFKA_BOOTSTRAP=kafka:9092
  #   restart: on-failure
    
  nyc-taxi-simulator:
    build: ./usecases/nyc_taxi
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
    volumes:
      - ./usecases/nyc_taxi:/app
    restart: on-failure

  fastapi-ml-service:
    build: ./fastapi-ml-service
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi-ml-service:/fastapi-ml-service
    restart: on-failure
    depends_on:
      - kafka
  
  processor:
    build: ./processor
    depends_on:
      - kafka
      - fastapi-ml-service
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
    restart: on-failure
  

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - kafka
      - fastapi-ml-service
      - processor
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: on-failure
  
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: on-failure


volumes:
  grafana-data: